{"ast":null,"code":"import { Task } from 'src/app/model/task';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/crud.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction DashboardComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"div\", 24)(3, \"div\", 25);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_16_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.call(task_r1));\n    });\n    i0.ɵɵtext(6, \"edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 27);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_16_Template_div_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteTask(task_r1));\n    });\n    i0.ɵɵtext(8, \"X\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", task_r1.task_name, \" \");\n  }\n}\n\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(crudService) {\n      this.crudService = crudService;\n      this.taskObj = new Task();\n      this.taskArr = [];\n      this.addTaskValue = '';\n      this.editTaskValue = '';\n    }\n\n    ngOnInit() {\n      this.editTaskValue = '';\n      this.addTaskValue = '';\n      this.taskObj = new Task();\n      this.taskArr = [];\n      this.getAllTask();\n    }\n\n    getAllTask() {\n      this.crudService.getAllTask().subscribe(res => {\n        this.taskArr = res;\n      }, err => {\n        alert(\"Unable to get list of tasks\");\n      });\n    }\n\n    addTask() {\n      this.taskObj.task_name = this.addTaskValue;\n      this.crudService.addTask(this.taskObj).subscribe(res => {\n        this.ngOnInit();\n        this.addTaskValue = '';\n      }, err => {\n        alert(err);\n      });\n    }\n\n    editTask() {\n      this.taskObj.task_name = this.editTaskValue;\n      this.crudService.editTask(this.taskObj).subscribe(res => {\n        this.ngOnInit();\n      }, err => {\n        alert(\"Failed to update task\");\n      });\n    }\n\n    deleteTask(etask) {\n      this.crudService.deleteTask(etask).subscribe(res => {\n        this.ngOnInit();\n      }, err => {\n        alert(\"Failed to delete task\");\n      });\n    }\n\n    call(etask) {\n      this.taskObj = etask;\n      this.editTaskValue = etask.task_name;\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.CrudService));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 30,\n    vars: 3,\n    consts: [[1, \"container-fluid\", \"bg-light\"], [1, \"container\", \"bg-light\"], [1, \"row\", \"mt-4\", 2, \"height\", \"500px\"], [1, \"col\"], [1, \"col-md-6\", \"bg-white\", \"shadow\"], [1, \"card\", \"bg-success\", \"mt-4\"], [1, \"text-white\", \"p-3\", \"pt-2\", \"pb-2\"], [1, \"shadow\"], [1, \"input-group\", \"p-4\"], [\"type\", \"text\", \"placeholder\", \"Enter task \", \"name\", \"task\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-success\", 3, \"click\"], [1, \"text-primary\", \"mt-4\"], [2, \"overflow-y\", \"auto\", \"height\", \"350px\"], [\"class\", \"m-3\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-outline-success\", 3, \"click\"], [1, \"m-3\"], [\"id\", \"tasks\", 1, \"p-2\", \"shadow\", \"border\"], [1, \"input-group\", \"row\", \"ps-3\"], [1, \"card\", \"col-md-10\", \"border-0\"], [\"data-bs-toggle\", \"modal\", \"type\", \"button\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-outline-primary\", \"col\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-outline-danger\", \"col\", 3, \"click\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\", 6);\n        i0.ɵɵtext(7, \"To do List\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8)(10, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.addTaskValue = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_11_listener() {\n          return ctx.addTask();\n        });\n        i0.ɵɵtext(12, \"+\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"h4\", 11);\n        i0.ɵɵtext(14, \"Tasks : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 12);\n        i0.ɵɵtemplate(16, DashboardComponent_div_16_Template, 9, 1, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 14)(18, \"div\", 15)(19, \"div\", 16)(20, \"div\", 17)(21, \"h5\", 18);\n        i0.ɵɵtext(22, \"Edit Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"button\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 20)(25, \"div\", 8)(26, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_26_listener($event) {\n          return ctx.editTaskValue = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_27_listener() {\n          return ctx.editTask();\n        });\n        i0.ɵɵtext(28, \"Update\");\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelement(29, \"div\", 3);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.addTaskValue);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.taskArr);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.editTaskValue);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}